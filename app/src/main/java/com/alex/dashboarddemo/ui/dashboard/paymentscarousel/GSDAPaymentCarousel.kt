package com.alex.dashboarddemo.ui.dashboard.paymentscarouselimport androidx.compose.foundation.layout.Arrangementimport androidx.compose.foundation.layout.Boximport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.Spacerimport androidx.compose.foundation.layout.fillMaxSizeimport androidx.compose.foundation.layout.heightimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.layout.sizeimport androidx.compose.foundation.layout.wrapContentSizeimport androidx.compose.foundation.lazy.LazyRowimport androidx.compose.foundation.lazy.itemsimport androidx.compose.foundation.shape.RoundedCornerShapeimport androidx.compose.material.Cardimport androidx.compose.material.Textimport androidx.compose.runtime.Composableimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.layout.ContentScaleimport androidx.compose.ui.tooling.preview.Previewimport androidx.compose.ui.unit.dpimport com.skydoves.landscapist.glide.GlideImageimport com.alex.dashboarddemo.Rimport com.alex.dashboarddemo.data.DemoDataProvider.gsdaPaymentsCardListimport com.alex.dashboarddemo.ui.theme.GSVCBody3Text100Leftimport com.alex.dashboarddemo.ui.theme.GSVCaptionText100Left@Composablefun GSDAPaymentCarousel(gsdaPaymentCarouselModel: GSDAPaymentCarouselModel) {    Column(        modifier = Modifier            .wrapContentSize()            .padding(8.dp),        horizontalAlignment = Alignment.Start,    ) {        Text(            text = gsdaPaymentCarouselModel.titlePaymentCarousel,            style = GSVCaptionText100Left,        )        Text(            text = gsdaPaymentCarouselModel.subtitlePaymentCarousel,            style = GSVCBody3Text100Left,        )        Spacer(modifier = Modifier.height(16.dp))        LazyRow(horizontalArrangement = Arrangement.spacedBy(8.dp)) {            items(gsdaPaymentCarouselModel.cardPaymentCarouselList) { item ->                Card(                    modifier = Modifier                        .size(156.dp, 113.dp),                    shape = RoundedCornerShape(16.dp),                    backgroundColor = Color(0xFFF0F0F1),                ) {                    Column(                        modifier = Modifier.padding(                            16.dp,                        ),                    ) {                        Spacer(modifier = Modifier.height(8.dp))                        Box(                            modifier = Modifier                                .size(50.dp)                                .align(Alignment.End),                        ) {                            GlideImage(                                imageModel = item.imageCardCarousel,                                contentScale = ContentScale.Fit,                                placeHolder = item.imageCardCarousel,                                error = item.imageCardCarousel,                            )                        }                        Text(text = item.txtCardCarousel)                    }                }            }        }    }}@Preview(showSystemUi = true)@Composablefun CardNewPreview() {    Column(        modifier = Modifier            .fillMaxSize()            .padding(0.dp),        verticalArrangement = Arrangement.Center,        horizontalAlignment = Alignment.Start,    ) {        val cardList = mutableListOf<GSDAPaymentCarouselCardModel>()        cardList.add(            GSDAPaymentCarouselCardModel(                "Alcancías",                R.drawable.gsda_ic_paymentcarousel_image1,            ),        )        cardList.add(            GSDAPaymentCarouselCardModel(                "Sobres",                R.drawable.gsda_ic_paymentcarousel_image2,            ),        )        cardList.add(            GSDAPaymentCarouselCardModel(                "Alcancías grupales",                R.drawable.gsda_ic_paymentcarousel_image1,            ),        )        cardList.add(            GSDAPaymentCarouselCardModel(                "Alcancías",                R.drawable.gsda_ic_paymentcarousel_image2,            ),        )        cardList.add(            GSDAPaymentCarouselCardModel(                "Sobres",                R.drawable.gsda_ic_paymentcarousel_image1,            ),        )        cardList.add(            GSDAPaymentCarouselCardModel(                "Alcancías grupales",                R.drawable.gsda_ic_paymentcarousel_image2,            ),        )        GSDAPaymentCarouselModel(            titlePaymentCarousel = "Cumple tus metas",            subtitlePaymentCarousel = "Te ayudamos a lograrlo con estas herramientas.",            cardPaymentCarouselList = cardList,        ).apply {            GSDAPaymentCarousel(gsdaPaymentCarouselModel = this)        }    }}